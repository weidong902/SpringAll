<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       https://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/mysqlStudy"/>
        <property name="username" value="root"/>
        <property name="password" value="3.014/*-+"/>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <context:component-scan base-package="com.weidd.best.study.transactionaltest"/>

    <!--事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--事务管理器模板: 编程式事务-->
    <!-- <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
         <property name="transactionManager" ref="transactionManager"></property>
     </bean>-->



    <!--如下代码是基于xml配置的声明式事务.-->

    <!--基于Aspectj 声明式事务xml配置方式-->
    <!--定义一个事务增强 -根据事务管理器生成一个事务的环绕通知 -->
    <tx:advice id="transactionInterceptor" transaction-manager="transactionManager">
        <!--增强事务的属性配置-->
        <!--
        isolation:事务的隔离级别(4种)
        propagation:事务的传播行为(7种)
        read-only:false 不是只读的
        timeout: -1
        rollback-for: 发生哪些异常回滚事务
        no-rollback-fo:发生哪些异常不回滚事务
        -->
        <tx:attributes>
            <tx:method name="save*" isolation="DEFAULT" propagation="REQUIRED"/>
            <tx:method name="transer"/>
        </tx:attributes>
    </tx:advice>
    <!--组装切面-->
    <aop:config>
        <!--定义那些类的的哪些方法应用增强-->
        <aop:pointcut id="pc" expression="execution(* com.weidd..best.transactionaltest..*.*(..))"/>
        <!--<aop:pointcut id="pc" expression="within(com.weidd.best.service)"/>-->
        <!--定义切面-->
        <aop:advisor advice-ref="transactionInterceptor" pointcut-ref="pc"></aop:advisor>
    </aop:config>


    <!--<tx:annotation-driven/> 就是支持事务注解的（@Transactional）-->
    <!-- 开启事务的注解驱动,作用是使@Transactional 注解生效 : 功能同上面基于aspectj 声明式事务xml配置,
    <tx:annotation-driven/>
    -->

</beans>